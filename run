#!/usr/bin/env python3

"""
Runs scenario simulation with veins current directory
"""

import os
import argparse


def relpath(s):
    root = os.path.dirname(os.path.realpath(__file__))
    return os.path.relpath(os.path.join(root, s), ".")


parser = argparse.ArgumentParser("Run a Veins simulation")
parser.add_argument(
    "-d",
    "--debug",
    action="store_true",
    help="Run using opp_run_dbg (instead of opp_run)",
)
parser.add_argument(
    "-t",
    "--tool",
    metavar="TOOL",
    dest="tool",
    choices=["lldb", "gdb", "memcheck"],
    help="Wrap opp_run execution in TOOL (lldb, gdb or memcheck)",
)
parser.add_argument(
    "-v",
    "--verbose",
    action="store_true",
    help="Print command line before executing",
)
parser.add_argument(
    "--", dest="arguments", help="Arguments to pass to opp_run"
)
args, omnet_args = parser.parse_known_args()

print("Args: ", vars(args))
print("Omnet Args: ", omnet_args)


if (len(omnet_args) > 0) and omnet_args[0] == "--":
    omnet_args = omnet_args[1:]

run_libs = [
    #relpath(s) for s in ["lib/veins/src/veins"]
    relpath(s) for s in [" veins/src/veins"]
]
run_neds = [
    relpath(s)
    #for s in ["src", "lib/veins/src/veins"]
    for s in [" ./", " veins/src/veins"]
] # + ["."]

#run_imgs = [relpath(s) for s in ["lib/veins/images"]]
run_imgs = [relpath(s) for s in ["veins/images"]]

run = "./run" if not args.debug else "../src/experiment_dbg"
#run = "./" if not args.debug else "../src/experiment_dbg"

lib_flags = ["-l%s" % s for s in run_libs]
ned_flags = ["-n" + ";".join(run_neds)]
img_flags = ["--image-path=" + ";".join(run_imgs)]

prefix = []
if args.tool == "lldb":
    prefix = ["lldb", "--"]
if args.tool == "gdb":
    prefix = ["gdb", "--args "]
if args.tool == "memcheck":
    prefix = [ 
        "valgrind",
        "--tool=memcheck",
        "--leak-check=full",
        "--dsymutil=yes",
        "--log-file=valgrind.out",
    ]

cmdline = ["sudo"] + prefix + [run] 
# + lib_flags + ned_flags + img_flags  + omnet_args
print("I go run now!")
if args.verbose:
    print(
        "Running with command line arguments: %s"
        % " ".join(['"%s"' % arg for arg in cmdline])
    )

os.execvp("env", ["env"] + cmdline)
# os.execvp("lowerloss -m -u Cmdenv omnetpp.ini ", omnet_args)
exit()
