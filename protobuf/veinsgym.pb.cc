// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: veinsgym.proto

#include "veinsgym.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_veinsgym_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Box;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Discrete;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Init;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MultiBinary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MultiDiscrete;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Shutdown;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Step;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_veinsgym_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Dict;
}  // namespace protobuf_veinsgym_2eproto
namespace veinsgym {
namespace proto {
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
  const ::veinsgym::proto::Init* init_;
  const ::veinsgym::proto::Shutdown* shutdown_;
  const ::veinsgym::proto::Step* step_;
} _Request_default_instance_;
class ReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reply>
      _instance;
  const ::veinsgym::proto::Init* init_;
  const ::veinsgym::proto::Shutdown* shutdown_;
  const ::veinsgym::proto::Space* action_;
} _Reply_default_instance_;
class InitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Init>
      _instance;
} _Init_default_instance_;
class ShutdownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Shutdown>
      _instance;
} _Shutdown_default_instance_;
class StepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Step>
      _instance;
} _Step_default_instance_;
class SpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Space>
      _instance;
  const ::veinsgym::proto::Box* box_;
  const ::veinsgym::proto::Dict* dict_;
  const ::veinsgym::proto::Discrete* discrete_;
  const ::veinsgym::proto::MultiBinary* multi_binary_;
  const ::veinsgym::proto::MultiDiscrete* multi_discrete_;
  const ::veinsgym::proto::Tuple* tuple_;
} _Space_default_instance_;
class BoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Box>
      _instance;
} _Box_default_instance_;
class Dict_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dict_Item>
      _instance;
} _Dict_Item_default_instance_;
class DictDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dict>
      _instance;
} _Dict_default_instance_;
class DiscreteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Discrete>
      _instance;
} _Discrete_default_instance_;
class MultiBinaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiBinary>
      _instance;
} _MultiBinary_default_instance_;
class MultiDiscreteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiDiscrete>
      _instance;
} _MultiDiscrete_default_instance_;
class TupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tuple>
      _instance;
} _Tuple_default_instance_;
}  // namespace proto
}  // namespace veinsgym
namespace protobuf_veinsgym_2eproto {
static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Request_default_instance_;
    new (ptr) ::veinsgym::proto::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRequest}, {
      &protobuf_veinsgym_2eproto::scc_info_Init.base,
      &protobuf_veinsgym_2eproto::scc_info_Shutdown.base,
      &protobuf_veinsgym_2eproto::scc_info_Step.base,}};

static void InitDefaultsReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Reply_default_instance_;
    new (ptr) ::veinsgym::proto::Reply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Reply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Reply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsReply}, {
      &protobuf_veinsgym_2eproto::scc_info_Init.base,
      &protobuf_veinsgym_2eproto::scc_info_Shutdown.base,
      &protobuf_veinsgym_2eproto::scc_info_Dict.base,}};

static void InitDefaultsInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Init_default_instance_;
    new (ptr) ::veinsgym::proto::Init();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Init::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Init =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInit}, {}};

static void InitDefaultsShutdown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Shutdown_default_instance_;
    new (ptr) ::veinsgym::proto::Shutdown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Shutdown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Shutdown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShutdown}, {}};

static void InitDefaultsStep() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Step_default_instance_;
    new (ptr) ::veinsgym::proto::Step();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Step::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Step =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStep}, {
      &protobuf_veinsgym_2eproto::scc_info_Dict.base,}};

static void InitDefaultsBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Box_default_instance_;
    new (ptr) ::veinsgym::proto::Box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBox}, {}};

static void InitDefaultsDict() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Space_default_instance_;
    new (ptr) ::veinsgym::proto::Space();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::veinsgym::proto::_Dict_Item_default_instance_;
    new (ptr) ::veinsgym::proto::Dict_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::veinsgym::proto::_Dict_default_instance_;
    new (ptr) ::veinsgym::proto::Dict();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::veinsgym::proto::_Tuple_default_instance_;
    new (ptr) ::veinsgym::proto::Tuple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Space::InitAsDefaultInstance();
  ::veinsgym::proto::Dict_Item::InitAsDefaultInstance();
  ::veinsgym::proto::Dict::InitAsDefaultInstance();
  ::veinsgym::proto::Tuple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Dict =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDict}, {
      &protobuf_veinsgym_2eproto::scc_info_Box.base,
      &protobuf_veinsgym_2eproto::scc_info_Discrete.base,
      &protobuf_veinsgym_2eproto::scc_info_MultiBinary.base,
      &protobuf_veinsgym_2eproto::scc_info_MultiDiscrete.base,}};

static void InitDefaultsDiscrete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_Discrete_default_instance_;
    new (ptr) ::veinsgym::proto::Discrete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::Discrete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Discrete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscrete}, {}};

static void InitDefaultsMultiBinary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_MultiBinary_default_instance_;
    new (ptr) ::veinsgym::proto::MultiBinary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::MultiBinary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MultiBinary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMultiBinary}, {}};

static void InitDefaultsMultiDiscrete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::veinsgym::proto::_MultiDiscrete_default_instance_;
    new (ptr) ::veinsgym::proto::MultiDiscrete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::veinsgym::proto::MultiDiscrete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MultiDiscrete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMultiDiscrete}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Init.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Shutdown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Step.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dict.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Discrete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MultiBinary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MultiDiscrete.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Request, id_),
  offsetof(::veinsgym::proto::RequestDefaultTypeInternal, init_),
  offsetof(::veinsgym::proto::RequestDefaultTypeInternal, shutdown_),
  offsetof(::veinsgym::proto::RequestDefaultTypeInternal, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Request, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Reply, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Reply, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Reply, id_),
  offsetof(::veinsgym::proto::ReplyDefaultTypeInternal, init_),
  offsetof(::veinsgym::proto::ReplyDefaultTypeInternal, shutdown_),
  offsetof(::veinsgym::proto::ReplyDefaultTypeInternal, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Reply, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Init, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Init, action_space_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Init, observation_space_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Init, reward_space_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Shutdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Step, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Step, observation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Step, reward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Space, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Space, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::veinsgym::proto::SpaceDefaultTypeInternal, box_),
  offsetof(::veinsgym::proto::SpaceDefaultTypeInternal, dict_),
  offsetof(::veinsgym::proto::SpaceDefaultTypeInternal, discrete_),
  offsetof(::veinsgym::proto::SpaceDefaultTypeInternal, multi_binary_),
  offsetof(::veinsgym::proto::SpaceDefaultTypeInternal, multi_discrete_),
  offsetof(::veinsgym::proto::SpaceDefaultTypeInternal, tuple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Space, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Box, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Box, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Dict_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Dict_Item, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Dict_Item, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Dict, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Dict, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Discrete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Discrete, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::MultiBinary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::MultiBinary, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::MultiDiscrete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::MultiDiscrete, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Tuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::veinsgym::proto::Tuple, values_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::veinsgym::proto::Request)},
  { 10, -1, sizeof(::veinsgym::proto::Reply)},
  { 20, -1, sizeof(::veinsgym::proto::Init)},
  { 28, -1, sizeof(::veinsgym::proto::Shutdown)},
  { 33, -1, sizeof(::veinsgym::proto::Step)},
  { 40, -1, sizeof(::veinsgym::proto::Space)},
  { 52, -1, sizeof(::veinsgym::proto::Box)},
  { 58, -1, sizeof(::veinsgym::proto::Dict_Item)},
  { 65, -1, sizeof(::veinsgym::proto::Dict)},
  { 71, -1, sizeof(::veinsgym::proto::Discrete)},
  { 77, -1, sizeof(::veinsgym::proto::MultiBinary)},
  { 83, -1, sizeof(::veinsgym::proto::MultiDiscrete)},
  { 89, -1, sizeof(::veinsgym::proto::Tuple)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Reply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Init_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Shutdown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Step_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Space_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Box_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Dict_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Dict_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Discrete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_MultiBinary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_MultiDiscrete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::veinsgym::proto::_Tuple_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "veinsgym.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016veinsgym.proto\022\016veinsgym.proto\"\232\001\n\007Req"
      "uest\022\n\n\002id\030\001 \001(\004\022$\n\004init\030\002 \001(\0132\024.veinsgy"
      "m.proto.InitH\000\022,\n\010shutdown\030\003 \001(\0132\030.veins"
      "gym.proto.ShutdownH\000\022$\n\004step\030\004 \001(\0132\024.vei"
      "nsgym.proto.StepH\000B\t\n\007payload\"\233\001\n\005Reply\022"
      "\n\n\002id\030\001 \001(\004\022$\n\004init\030\002 \001(\0132\024.veinsgym.pro"
      "to.InitH\000\022,\n\010shutdown\030\003 \001(\0132\030.veinsgym.p"
      "roto.ShutdownH\000\022\'\n\006action\030\004 \001(\0132\025.veinsg"
      "ym.proto.SpaceH\000B\t\n\007payload\"\\\n\004Init\022\031\n\021a"
      "ction_space_code\030\001 \001(\t\022\036\n\026observation_sp"
      "ace_code\030\002 \001(\t\022\031\n\021reward_space_code\030\003 \001("
      "\t\"\n\n\010Shutdown\"Y\n\004Step\022*\n\013observation\030\001 \001"
      "(\0132\025.veinsgym.proto.Space\022%\n\006reward\030\002 \001("
      "\0132\025.veinsgym.proto.Space\"\236\002\n\005Space\022\"\n\003bo"
      "x\030\001 \001(\0132\023.veinsgym.proto.BoxH\000\022$\n\004dict\030\002"
      " \001(\0132\024.veinsgym.proto.DictH\000\022,\n\010discrete"
      "\030\003 \001(\0132\030.veinsgym.proto.DiscreteH\000\0223\n\014mu"
      "lti_binary\030\004 \001(\0132\033.veinsgym.proto.MultiB"
      "inaryH\000\0227\n\016multi_discrete\030\005 \001(\0132\035.veinsg"
      "ym.proto.MultiDiscreteH\000\022&\n\005tuple\030\006 \001(\0132"
      "\025.veinsgym.proto.TupleH\000B\007\n\005value\"\025\n\003Box"
      "\022\016\n\006values\030\001 \003(\001\"l\n\004Dict\022)\n\006values\030\001 \003(\013"
      "2\031.veinsgym.proto.Dict.Item\0329\n\004Item\022\013\n\003k"
      "ey\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025.veinsgym.proto"
      ".Space\"\031\n\010Discrete\022\r\n\005value\030\001 \001(\004\"\035\n\013Mul"
      "tiBinary\022\016\n\006values\030\001 \003(\010\"\037\n\rMultiDiscret"
      "e\022\016\n\006values\030\001 \003(\004\".\n\005Tuple\022%\n\006values\030\001 \003"
      "(\0132\025.veinsgym.proto.Spaceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1113);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "veinsgym.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_veinsgym_2eproto
namespace veinsgym {
namespace proto {

// ===================================================================

void Request::InitAsDefaultInstance() {
  ::veinsgym::proto::_Request_default_instance_.init_ = const_cast< ::veinsgym::proto::Init*>(
      ::veinsgym::proto::Init::internal_default_instance());
  ::veinsgym::proto::_Request_default_instance_.shutdown_ = const_cast< ::veinsgym::proto::Shutdown*>(
      ::veinsgym::proto::Shutdown::internal_default_instance());
  ::veinsgym::proto::_Request_default_instance_.step_ = const_cast< ::veinsgym::proto::Step*>(
      ::veinsgym::proto::Step::internal_default_instance());
}
void Request::set_allocated_init(::veinsgym::proto::Init* init) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (init) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      init = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, init, submessage_arena);
    }
    set_has_init();
    payload_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Request.init)
}
void Request::set_allocated_shutdown(::veinsgym::proto::Shutdown* shutdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (shutdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      shutdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shutdown, submessage_arena);
    }
    set_has_shutdown();
    payload_.shutdown_ = shutdown;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Request.shutdown)
}
void Request::set_allocated_step(::veinsgym::proto::Step* step) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (step) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      step = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, step, submessage_arena);
    }
    set_has_step();
    payload_.step_ = step;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Request.step)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kIdFieldNumber;
const int Request::kInitFieldNumber;
const int Request::kShutdownFieldNumber;
const int Request::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kInit: {
      mutable_init()->::veinsgym::proto::Init::MergeFrom(from.init());
      break;
    }
    case kShutdown: {
      mutable_shutdown()->::veinsgym::proto::Shutdown::MergeFrom(from.shutdown());
      break;
    }
    case kStep: {
      mutable_step()->::veinsgym::proto::Step::MergeFrom(from.step());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Request)
}

void Request::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_payload();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:veinsgym.proto.Request)
  switch (payload_case()) {
    case kInit: {
      delete payload_.init_;
      break;
    }
    case kShutdown: {
      delete payload_.shutdown_;
      break;
    }
    case kStep: {
      delete payload_.step_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  clear_payload();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Init init = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Shutdown shutdown = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shutdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Step step = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .veinsgym.proto.Init init = 2;
  if (has_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_init(), output);
  }

  // .veinsgym.proto.Shutdown shutdown = 3;
  if (has_shutdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_shutdown(), output);
  }

  // .veinsgym.proto.Step step = 4;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_step(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .veinsgym.proto.Init init = 2;
  if (has_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_init(), deterministic, target);
  }

  // .veinsgym.proto.Shutdown shutdown = 3;
  if (has_shutdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_shutdown(), deterministic, target);
  }

  // .veinsgym.proto.Step step = 4;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_step(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  switch (payload_case()) {
    // .veinsgym.proto.Init init = 2;
    case kInit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.init_);
      break;
    }
    // .veinsgym.proto.Shutdown shutdown = 3;
    case kShutdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.shutdown_);
      break;
    }
    // .veinsgym.proto.Step step = 4;
    case kStep: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.step_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  switch (from.payload_case()) {
    case kInit: {
      mutable_init()->::veinsgym::proto::Init::MergeFrom(from.init());
      break;
    }
    case kShutdown: {
      mutable_shutdown()->::veinsgym::proto::Shutdown::MergeFrom(from.shutdown());
      break;
    }
    case kStep: {
      mutable_step()->::veinsgym::proto::Step::MergeFrom(from.step());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reply::InitAsDefaultInstance() {
  ::veinsgym::proto::_Reply_default_instance_.init_ = const_cast< ::veinsgym::proto::Init*>(
      ::veinsgym::proto::Init::internal_default_instance());
  ::veinsgym::proto::_Reply_default_instance_.shutdown_ = const_cast< ::veinsgym::proto::Shutdown*>(
      ::veinsgym::proto::Shutdown::internal_default_instance());
  ::veinsgym::proto::_Reply_default_instance_.action_ = const_cast< ::veinsgym::proto::Space*>(
      ::veinsgym::proto::Space::internal_default_instance());
}
void Reply::set_allocated_init(::veinsgym::proto::Init* init) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (init) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      init = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, init, submessage_arena);
    }
    set_has_init();
    payload_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Reply.init)
}
void Reply::set_allocated_shutdown(::veinsgym::proto::Shutdown* shutdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (shutdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      shutdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shutdown, submessage_arena);
    }
    set_has_shutdown();
    payload_.shutdown_ = shutdown;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Reply.shutdown)
}
void Reply::set_allocated_action(::veinsgym::proto::Space* action) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (action) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      action = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    set_has_action();
    payload_.action_ = action;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Reply.action)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kIdFieldNumber;
const int Reply::kInitFieldNumber;
const int Reply::kShutdownFieldNumber;
const int Reply::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Reply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Reply)
}
Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kInit: {
      mutable_init()->::veinsgym::proto::Init::MergeFrom(from.init());
      break;
    }
    case kShutdown: {
      mutable_shutdown()->::veinsgym::proto::Shutdown::MergeFrom(from.shutdown());
      break;
    }
    case kAction: {
      mutable_action()->::veinsgym::proto::Space::MergeFrom(from.action());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Reply)
}

void Reply::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_payload();
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Reply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reply& Reply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Reply.base);
  return *internal_default_instance();
}


void Reply::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:veinsgym.proto.Reply)
  switch (payload_case()) {
    case kInit: {
      delete payload_.init_;
      break;
    }
    case kShutdown: {
      delete payload_.shutdown_;
      break;
    }
    case kAction: {
      delete payload_.action_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  clear_payload();
  _internal_metadata_.Clear();
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Reply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Init init = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Shutdown shutdown = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shutdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Space action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .veinsgym.proto.Init init = 2;
  if (has_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_init(), output);
  }

  // .veinsgym.proto.Shutdown shutdown = 3;
  if (has_shutdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_shutdown(), output);
  }

  // .veinsgym.proto.Space action = 4;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Reply)
}

::google::protobuf::uint8* Reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .veinsgym.proto.Init init = 2;
  if (has_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_init(), deterministic, target);
  }

  // .veinsgym.proto.Shutdown shutdown = 3;
  if (has_shutdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_shutdown(), deterministic, target);
  }

  // .veinsgym.proto.Space action = 4;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_action(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Reply)
  return target;
}

size_t Reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Reply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  switch (payload_case()) {
    // .veinsgym.proto.Init init = 2;
    case kInit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.init_);
      break;
    }
    // .veinsgym.proto.Shutdown shutdown = 3;
    case kShutdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.shutdown_);
      break;
    }
    // .veinsgym.proto.Space action = 4;
    case kAction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.action_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Reply)
  GOOGLE_DCHECK_NE(&from, this);
  const Reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Reply)
    MergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  switch (from.payload_case()) {
    case kInit: {
      mutable_init()->::veinsgym::proto::Init::MergeFrom(from.init());
      break;
    }
    case kShutdown: {
      mutable_shutdown()->::veinsgym::proto::Shutdown::MergeFrom(from.shutdown());
      break;
    }
    case kAction: {
      mutable_action()->::veinsgym::proto::Space::MergeFrom(from.action());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply::IsInitialized() const {
  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Init::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Init::kActionSpaceCodeFieldNumber;
const int Init::kObservationSpaceCodeFieldNumber;
const int Init::kRewardSpaceCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Init::Init()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Init.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Init)
}
Init::Init(const Init& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_space_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action_space_code().size() > 0) {
    action_space_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_space_code_);
  }
  observation_space_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.observation_space_code().size() > 0) {
    observation_space_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.observation_space_code_);
  }
  reward_space_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reward_space_code().size() > 0) {
    reward_space_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_space_code_);
  }
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Init)
}

void Init::SharedCtor() {
  action_space_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  observation_space_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_space_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Init::~Init() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Init)
  SharedDtor();
}

void Init::SharedDtor() {
  action_space_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  observation_space_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_space_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Init::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Init::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Init& Init::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Init.base);
  return *internal_default_instance();
}


void Init::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Init)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_space_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  observation_space_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_space_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Init::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Init)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string action_space_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action_space_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action_space_code().data(), static_cast<int>(this->action_space_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "veinsgym.proto.Init.action_space_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string observation_space_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_observation_space_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->observation_space_code().data(), static_cast<int>(this->observation_space_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "veinsgym.proto.Init.observation_space_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reward_space_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reward_space_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reward_space_code().data(), static_cast<int>(this->reward_space_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "veinsgym.proto.Init.reward_space_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Init)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Init)
  return false;
#undef DO_
}

void Init::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Init)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action_space_code = 1;
  if (this->action_space_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action_space_code().data(), static_cast<int>(this->action_space_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Init.action_space_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action_space_code(), output);
  }

  // string observation_space_code = 2;
  if (this->observation_space_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->observation_space_code().data(), static_cast<int>(this->observation_space_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Init.observation_space_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->observation_space_code(), output);
  }

  // string reward_space_code = 3;
  if (this->reward_space_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward_space_code().data(), static_cast<int>(this->reward_space_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Init.reward_space_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reward_space_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Init)
}

::google::protobuf::uint8* Init::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Init)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action_space_code = 1;
  if (this->action_space_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action_space_code().data(), static_cast<int>(this->action_space_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Init.action_space_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->action_space_code(), target);
  }

  // string observation_space_code = 2;
  if (this->observation_space_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->observation_space_code().data(), static_cast<int>(this->observation_space_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Init.observation_space_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->observation_space_code(), target);
  }

  // string reward_space_code = 3;
  if (this->reward_space_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward_space_code().data(), static_cast<int>(this->reward_space_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Init.reward_space_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reward_space_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Init)
  return target;
}

size_t Init::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Init)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string action_space_code = 1;
  if (this->action_space_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action_space_code());
  }

  // string observation_space_code = 2;
  if (this->observation_space_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->observation_space_code());
  }

  // string reward_space_code = 3;
  if (this->reward_space_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reward_space_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Init::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Init)
  GOOGLE_DCHECK_NE(&from, this);
  const Init* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Init>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Init)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Init)
    MergeFrom(*source);
  }
}

void Init::MergeFrom(const Init& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Init)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action_space_code().size() > 0) {

    action_space_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_space_code_);
  }
  if (from.observation_space_code().size() > 0) {

    observation_space_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.observation_space_code_);
  }
  if (from.reward_space_code().size() > 0) {

    reward_space_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_space_code_);
  }
}

void Init::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Init)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Init::CopyFrom(const Init& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Init)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Init::IsInitialized() const {
  return true;
}

void Init::Swap(Init* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Init::InternalSwap(Init* other) {
  using std::swap;
  action_space_code_.Swap(&other->action_space_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  observation_space_code_.Swap(&other->observation_space_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reward_space_code_.Swap(&other->reward_space_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Init::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Shutdown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shutdown::Shutdown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Shutdown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Shutdown)
}
Shutdown::Shutdown(const Shutdown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Shutdown)
}

void Shutdown::SharedCtor() {
}

Shutdown::~Shutdown() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Shutdown)
  SharedDtor();
}

void Shutdown::SharedDtor() {
}

void Shutdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Shutdown::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Shutdown& Shutdown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Shutdown.base);
  return *internal_default_instance();
}


void Shutdown::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Shutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Shutdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Shutdown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Shutdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Shutdown)
  return false;
#undef DO_
}

void Shutdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Shutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Shutdown)
}

::google::protobuf::uint8* Shutdown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Shutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Shutdown)
  return target;
}

size_t Shutdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Shutdown)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Shutdown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Shutdown)
  GOOGLE_DCHECK_NE(&from, this);
  const Shutdown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shutdown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Shutdown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Shutdown)
    MergeFrom(*source);
  }
}

void Shutdown::MergeFrom(const Shutdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Shutdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Shutdown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Shutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shutdown::CopyFrom(const Shutdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Shutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shutdown::IsInitialized() const {
  return true;
}

void Shutdown::Swap(Shutdown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shutdown::InternalSwap(Shutdown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Shutdown::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Step::InitAsDefaultInstance() {
  ::veinsgym::proto::_Step_default_instance_._instance.get_mutable()->observation_ = const_cast< ::veinsgym::proto::Space*>(
      ::veinsgym::proto::Space::internal_default_instance());
  ::veinsgym::proto::_Step_default_instance_._instance.get_mutable()->reward_ = const_cast< ::veinsgym::proto::Space*>(
      ::veinsgym::proto::Space::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Step::kObservationFieldNumber;
const int Step::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Step::Step()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Step.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Step)
}
Step::Step(const Step& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_observation()) {
    observation_ = new ::veinsgym::proto::Space(*from.observation_);
  } else {
    observation_ = NULL;
  }
  if (from.has_reward()) {
    reward_ = new ::veinsgym::proto::Space(*from.reward_);
  } else {
    reward_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Step)
}

void Step::SharedCtor() {
  ::memset(&observation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_) -
      reinterpret_cast<char*>(&observation_)) + sizeof(reward_));
}

Step::~Step() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Step)
  SharedDtor();
}

void Step::SharedDtor() {
  if (this != internal_default_instance()) delete observation_;
  if (this != internal_default_instance()) delete reward_;
}

void Step::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Step::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Step& Step::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Step.base);
  return *internal_default_instance();
}


void Step::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Step)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && observation_ != NULL) {
    delete observation_;
  }
  observation_ = NULL;
  if (GetArenaNoVirtual() == NULL && reward_ != NULL) {
    delete reward_;
  }
  reward_ = NULL;
  _internal_metadata_.Clear();
}

bool Step::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Step)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .veinsgym.proto.Space observation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_observation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Space reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Step)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Step)
  return false;
#undef DO_
}

void Step::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Step)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .veinsgym.proto.Space observation = 1;
  if (this->has_observation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_observation(), output);
  }

  // .veinsgym.proto.Space reward = 2;
  if (this->has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reward(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Step)
}

::google::protobuf::uint8* Step::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Step)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .veinsgym.proto.Space observation = 1;
  if (this->has_observation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_observation(), deterministic, target);
  }

  // .veinsgym.proto.Space reward = 2;
  if (this->has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reward(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Step)
  return target;
}

size_t Step::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Step)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .veinsgym.proto.Space observation = 1;
  if (this->has_observation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *observation_);
  }

  // .veinsgym.proto.Space reward = 2;
  if (this->has_reward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reward_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Step::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Step)
  GOOGLE_DCHECK_NE(&from, this);
  const Step* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Step>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Step)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Step)
    MergeFrom(*source);
  }
}

void Step::MergeFrom(const Step& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Step)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_observation()) {
    mutable_observation()->::veinsgym::proto::Space::MergeFrom(from.observation());
  }
  if (from.has_reward()) {
    mutable_reward()->::veinsgym::proto::Space::MergeFrom(from.reward());
  }
}

void Step::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Step::CopyFrom(const Step& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Step::IsInitialized() const {
  return true;
}

void Step::Swap(Step* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Step::InternalSwap(Step* other) {
  using std::swap;
  swap(observation_, other->observation_);
  swap(reward_, other->reward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Step::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Space::InitAsDefaultInstance() {
  ::veinsgym::proto::_Space_default_instance_.box_ = const_cast< ::veinsgym::proto::Box*>(
      ::veinsgym::proto::Box::internal_default_instance());
  ::veinsgym::proto::_Space_default_instance_.dict_ = const_cast< ::veinsgym::proto::Dict*>(
      ::veinsgym::proto::Dict::internal_default_instance());
  ::veinsgym::proto::_Space_default_instance_.discrete_ = const_cast< ::veinsgym::proto::Discrete*>(
      ::veinsgym::proto::Discrete::internal_default_instance());
  ::veinsgym::proto::_Space_default_instance_.multi_binary_ = const_cast< ::veinsgym::proto::MultiBinary*>(
      ::veinsgym::proto::MultiBinary::internal_default_instance());
  ::veinsgym::proto::_Space_default_instance_.multi_discrete_ = const_cast< ::veinsgym::proto::MultiDiscrete*>(
      ::veinsgym::proto::MultiDiscrete::internal_default_instance());
  ::veinsgym::proto::_Space_default_instance_.tuple_ = const_cast< ::veinsgym::proto::Tuple*>(
      ::veinsgym::proto::Tuple::internal_default_instance());
}
void Space::set_allocated_box(::veinsgym::proto::Box* box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, box, submessage_arena);
    }
    set_has_box();
    value_.box_ = box;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Space.box)
}
void Space::set_allocated_dict(::veinsgym::proto::Dict* dict) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (dict) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dict = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dict, submessage_arena);
    }
    set_has_dict();
    value_.dict_ = dict;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Space.dict)
}
void Space::set_allocated_discrete(::veinsgym::proto::Discrete* discrete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (discrete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      discrete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, discrete, submessage_arena);
    }
    set_has_discrete();
    value_.discrete_ = discrete;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Space.discrete)
}
void Space::set_allocated_multi_binary(::veinsgym::proto::MultiBinary* multi_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (multi_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multi_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multi_binary, submessage_arena);
    }
    set_has_multi_binary();
    value_.multi_binary_ = multi_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Space.multi_binary)
}
void Space::set_allocated_multi_discrete(::veinsgym::proto::MultiDiscrete* multi_discrete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (multi_discrete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multi_discrete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multi_discrete, submessage_arena);
    }
    set_has_multi_discrete();
    value_.multi_discrete_ = multi_discrete;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Space.multi_discrete)
}
void Space::set_allocated_tuple(::veinsgym::proto::Tuple* tuple) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (tuple) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tuple = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tuple, submessage_arena);
    }
    set_has_tuple();
    value_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:veinsgym.proto.Space.tuple)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Space::kBoxFieldNumber;
const int Space::kDictFieldNumber;
const int Space::kDiscreteFieldNumber;
const int Space::kMultiBinaryFieldNumber;
const int Space::kMultiDiscreteFieldNumber;
const int Space::kTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Space::Space()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Dict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Space)
}
Space::Space(const Space& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kBox: {
      mutable_box()->::veinsgym::proto::Box::MergeFrom(from.box());
      break;
    }
    case kDict: {
      mutable_dict()->::veinsgym::proto::Dict::MergeFrom(from.dict());
      break;
    }
    case kDiscrete: {
      mutable_discrete()->::veinsgym::proto::Discrete::MergeFrom(from.discrete());
      break;
    }
    case kMultiBinary: {
      mutable_multi_binary()->::veinsgym::proto::MultiBinary::MergeFrom(from.multi_binary());
      break;
    }
    case kMultiDiscrete: {
      mutable_multi_discrete()->::veinsgym::proto::MultiDiscrete::MergeFrom(from.multi_discrete());
      break;
    }
    case kTuple: {
      mutable_tuple()->::veinsgym::proto::Tuple::MergeFrom(from.tuple());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Space)
}

void Space::SharedCtor() {
  clear_has_value();
}

Space::~Space() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Space)
  SharedDtor();
}

void Space::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Space::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Space::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Space& Space::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Dict.base);
  return *internal_default_instance();
}


void Space::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:veinsgym.proto.Space)
  switch (value_case()) {
    case kBox: {
      delete value_.box_;
      break;
    }
    case kDict: {
      delete value_.dict_;
      break;
    }
    case kDiscrete: {
      delete value_.discrete_;
      break;
    }
    case kMultiBinary: {
      delete value_.multi_binary_;
      break;
    }
    case kMultiDiscrete: {
      delete value_.multi_discrete_;
      break;
    }
    case kTuple: {
      delete value_.tuple_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Space::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Space)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool Space::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Space)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .veinsgym.proto.Box box = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Dict dict = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dict()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Discrete discrete = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discrete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.MultiBinary multi_binary = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multi_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.MultiDiscrete multi_discrete = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multi_discrete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Tuple tuple = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Space)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Space)
  return false;
#undef DO_
}

void Space::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Space)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .veinsgym.proto.Box box = 1;
  if (has_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_box(), output);
  }

  // .veinsgym.proto.Dict dict = 2;
  if (has_dict()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_dict(), output);
  }

  // .veinsgym.proto.Discrete discrete = 3;
  if (has_discrete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_discrete(), output);
  }

  // .veinsgym.proto.MultiBinary multi_binary = 4;
  if (has_multi_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_multi_binary(), output);
  }

  // .veinsgym.proto.MultiDiscrete multi_discrete = 5;
  if (has_multi_discrete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_multi_discrete(), output);
  }

  // .veinsgym.proto.Tuple tuple = 6;
  if (has_tuple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_tuple(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Space)
}

::google::protobuf::uint8* Space::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Space)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .veinsgym.proto.Box box = 1;
  if (has_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_box(), deterministic, target);
  }

  // .veinsgym.proto.Dict dict = 2;
  if (has_dict()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_dict(), deterministic, target);
  }

  // .veinsgym.proto.Discrete discrete = 3;
  if (has_discrete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_discrete(), deterministic, target);
  }

  // .veinsgym.proto.MultiBinary multi_binary = 4;
  if (has_multi_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_multi_binary(), deterministic, target);
  }

  // .veinsgym.proto.MultiDiscrete multi_discrete = 5;
  if (has_multi_discrete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_multi_discrete(), deterministic, target);
  }

  // .veinsgym.proto.Tuple tuple = 6;
  if (has_tuple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_tuple(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Space)
  return target;
}

size_t Space::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Space)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .veinsgym.proto.Box box = 1;
    case kBox: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.box_);
      break;
    }
    // .veinsgym.proto.Dict dict = 2;
    case kDict: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.dict_);
      break;
    }
    // .veinsgym.proto.Discrete discrete = 3;
    case kDiscrete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.discrete_);
      break;
    }
    // .veinsgym.proto.MultiBinary multi_binary = 4;
    case kMultiBinary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.multi_binary_);
      break;
    }
    // .veinsgym.proto.MultiDiscrete multi_discrete = 5;
    case kMultiDiscrete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.multi_discrete_);
      break;
    }
    // .veinsgym.proto.Tuple tuple = 6;
    case kTuple: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.tuple_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Space::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Space)
  GOOGLE_DCHECK_NE(&from, this);
  const Space* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Space>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Space)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Space)
    MergeFrom(*source);
  }
}

void Space::MergeFrom(const Space& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Space)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kBox: {
      mutable_box()->::veinsgym::proto::Box::MergeFrom(from.box());
      break;
    }
    case kDict: {
      mutable_dict()->::veinsgym::proto::Dict::MergeFrom(from.dict());
      break;
    }
    case kDiscrete: {
      mutable_discrete()->::veinsgym::proto::Discrete::MergeFrom(from.discrete());
      break;
    }
    case kMultiBinary: {
      mutable_multi_binary()->::veinsgym::proto::MultiBinary::MergeFrom(from.multi_binary());
      break;
    }
    case kMultiDiscrete: {
      mutable_multi_discrete()->::veinsgym::proto::MultiDiscrete::MergeFrom(from.multi_discrete());
      break;
    }
    case kTuple: {
      mutable_tuple()->::veinsgym::proto::Tuple::MergeFrom(from.tuple());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Space::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Space)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Space::CopyFrom(const Space& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Space)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Space::IsInitialized() const {
  return true;
}

void Space::Swap(Space* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Space::InternalSwap(Space* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Space::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Box::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Box::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Box::Box()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Box)
}
Box::Box(const Box& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Box)
}

void Box::SharedCtor() {
}

Box::~Box() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Box)
  SharedDtor();
}

void Box::SharedDtor() {
}

void Box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Box::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Box& Box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Box.base);
  return *internal_default_instance();
}


void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Box)
  return false;
#undef DO_
}

void Box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Box)
}

::google::protobuf::uint8* Box::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Box)
  return target;
}

size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Box)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Box::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Box)
  GOOGLE_DCHECK_NE(&from, this);
  const Box* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Box>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Box)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Box)
    MergeFrom(*source);
  }
}

void Box::MergeFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Box::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Box::IsInitialized() const {
  return true;
}

void Box::Swap(Box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Box::InternalSwap(Box* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Box::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dict_Item::InitAsDefaultInstance() {
  ::veinsgym::proto::_Dict_Item_default_instance_._instance.get_mutable()->value_ = const_cast< ::veinsgym::proto::Space*>(
      ::veinsgym::proto::Space::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dict_Item::kKeyFieldNumber;
const int Dict_Item::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dict_Item::Dict_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Dict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Dict.Item)
}
Dict_Item::Dict_Item(const Dict_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    value_ = new ::veinsgym::proto::Space(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Dict.Item)
}

void Dict_Item::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

Dict_Item::~Dict_Item() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Dict.Item)
  SharedDtor();
}

void Dict_Item::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void Dict_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dict_Item::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dict_Item& Dict_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Dict.base);
  return *internal_default_instance();
}


void Dict_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Dict.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Dict_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Dict.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "veinsgym.proto.Dict.Item.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .veinsgym.proto.Space value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Dict.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Dict.Item)
  return false;
#undef DO_
}

void Dict_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Dict.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Dict.Item.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .veinsgym.proto.Space value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Dict.Item)
}

::google::protobuf::uint8* Dict_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Dict.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "veinsgym.proto.Dict.Item.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .veinsgym.proto.Space value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Dict.Item)
  return target;
}

size_t Dict_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Dict.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .veinsgym.proto.Space value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dict_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Dict.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Dict_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dict_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Dict.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Dict.Item)
    MergeFrom(*source);
  }
}

void Dict_Item::MergeFrom(const Dict_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Dict.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::veinsgym::proto::Space::MergeFrom(from.value());
  }
}

void Dict_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Dict.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dict_Item::CopyFrom(const Dict_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Dict.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dict_Item::IsInitialized() const {
  return true;
}

void Dict_Item::Swap(Dict_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dict_Item::InternalSwap(Dict_Item* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dict_Item::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dict::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dict::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dict::Dict()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Dict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Dict)
}
Dict::Dict(const Dict& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Dict)
}

void Dict::SharedCtor() {
}

Dict::~Dict() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Dict)
  SharedDtor();
}

void Dict::SharedDtor() {
}

void Dict::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dict::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dict& Dict::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Dict.base);
  return *internal_default_instance();
}


void Dict::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Dict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Dict::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Dict)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .veinsgym.proto.Dict.Item values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Dict)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Dict)
  return false;
#undef DO_
}

void Dict::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Dict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .veinsgym.proto.Dict.Item values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Dict)
}

::google::protobuf::uint8* Dict::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Dict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .veinsgym.proto.Dict.Item values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Dict)
  return target;
}

size_t Dict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Dict)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .veinsgym.proto.Dict.Item values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dict::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Dict)
  GOOGLE_DCHECK_NE(&from, this);
  const Dict* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dict>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Dict)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Dict)
    MergeFrom(*source);
  }
}

void Dict::MergeFrom(const Dict& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Dict)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Dict::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Dict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dict::CopyFrom(const Dict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Dict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dict::IsInitialized() const {
  return true;
}

void Dict::Swap(Dict* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dict::InternalSwap(Dict* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dict::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Discrete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Discrete::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Discrete::Discrete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Discrete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Discrete)
}
Discrete::Discrete(const Discrete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Discrete)
}

void Discrete::SharedCtor() {
  value_ = GOOGLE_ULONGLONG(0);
}

Discrete::~Discrete() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Discrete)
  SharedDtor();
}

void Discrete::SharedDtor() {
}

void Discrete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Discrete::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Discrete& Discrete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Discrete.base);
  return *internal_default_instance();
}


void Discrete::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Discrete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Discrete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Discrete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Discrete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Discrete)
  return false;
#undef DO_
}

void Discrete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Discrete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Discrete)
}

::google::protobuf::uint8* Discrete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Discrete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Discrete)
  return target;
}

size_t Discrete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Discrete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Discrete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Discrete)
  GOOGLE_DCHECK_NE(&from, this);
  const Discrete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Discrete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Discrete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Discrete)
    MergeFrom(*source);
  }
}

void Discrete::MergeFrom(const Discrete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Discrete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Discrete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Discrete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Discrete::CopyFrom(const Discrete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Discrete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discrete::IsInitialized() const {
  return true;
}

void Discrete::Swap(Discrete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Discrete::InternalSwap(Discrete* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Discrete::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiBinary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiBinary::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiBinary::MultiBinary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_MultiBinary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.MultiBinary)
}
MultiBinary::MultiBinary(const MultiBinary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.MultiBinary)
}

void MultiBinary::SharedCtor() {
}

MultiBinary::~MultiBinary() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.MultiBinary)
  SharedDtor();
}

void MultiBinary::SharedDtor() {
}

void MultiBinary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MultiBinary::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiBinary& MultiBinary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_MultiBinary.base);
  return *internal_default_instance();
}


void MultiBinary::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.MultiBinary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool MultiBinary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.MultiBinary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.MultiBinary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.MultiBinary)
  return false;
#undef DO_
}

void MultiBinary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.MultiBinary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.MultiBinary)
}

::google::protobuf::uint8* MultiBinary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.MultiBinary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.MultiBinary)
  return target;
}

size_t MultiBinary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.MultiBinary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiBinary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.MultiBinary)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiBinary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiBinary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.MultiBinary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.MultiBinary)
    MergeFrom(*source);
  }
}

void MultiBinary::MergeFrom(const MultiBinary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.MultiBinary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void MultiBinary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.MultiBinary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiBinary::CopyFrom(const MultiBinary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.MultiBinary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiBinary::IsInitialized() const {
  return true;
}

void MultiBinary::Swap(MultiBinary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiBinary::InternalSwap(MultiBinary* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MultiBinary::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiDiscrete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiDiscrete::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiDiscrete::MultiDiscrete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_MultiDiscrete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.MultiDiscrete)
}
MultiDiscrete::MultiDiscrete(const MultiDiscrete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.MultiDiscrete)
}

void MultiDiscrete::SharedCtor() {
}

MultiDiscrete::~MultiDiscrete() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.MultiDiscrete)
  SharedDtor();
}

void MultiDiscrete::SharedDtor() {
}

void MultiDiscrete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MultiDiscrete::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiDiscrete& MultiDiscrete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_MultiDiscrete.base);
  return *internal_default_instance();
}


void MultiDiscrete::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.MultiDiscrete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool MultiDiscrete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.MultiDiscrete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.MultiDiscrete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.MultiDiscrete)
  return false;
#undef DO_
}

void MultiDiscrete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.MultiDiscrete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.MultiDiscrete)
}

::google::protobuf::uint8* MultiDiscrete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.MultiDiscrete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.MultiDiscrete)
  return target;
}

size_t MultiDiscrete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.MultiDiscrete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiDiscrete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.MultiDiscrete)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiDiscrete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiDiscrete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.MultiDiscrete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.MultiDiscrete)
    MergeFrom(*source);
  }
}

void MultiDiscrete::MergeFrom(const MultiDiscrete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.MultiDiscrete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void MultiDiscrete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.MultiDiscrete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiDiscrete::CopyFrom(const MultiDiscrete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.MultiDiscrete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiDiscrete::IsInitialized() const {
  return true;
}

void MultiDiscrete::Swap(MultiDiscrete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiDiscrete::InternalSwap(MultiDiscrete* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MultiDiscrete::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tuple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple::Tuple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_veinsgym_2eproto::scc_info_Dict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:veinsgym.proto.Tuple)
}
Tuple::Tuple(const Tuple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:veinsgym.proto.Tuple)
}

void Tuple::SharedCtor() {
}

Tuple::~Tuple() {
  // @@protoc_insertion_point(destructor:veinsgym.proto.Tuple)
  SharedDtor();
}

void Tuple::SharedDtor() {
}

void Tuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tuple::descriptor() {
  ::protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tuple& Tuple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_veinsgym_2eproto::scc_info_Dict.base);
  return *internal_default_instance();
}


void Tuple::Clear() {
// @@protoc_insertion_point(message_clear_start:veinsgym.proto.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:veinsgym.proto.Tuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .veinsgym.proto.Space values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:veinsgym.proto.Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:veinsgym.proto.Tuple)
  return false;
#undef DO_
}

void Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:veinsgym.proto.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .veinsgym.proto.Space values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:veinsgym.proto.Tuple)
}

::google::protobuf::uint8* Tuple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:veinsgym.proto.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .veinsgym.proto.Space values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:veinsgym.proto.Tuple)
  return target;
}

size_t Tuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:veinsgym.proto.Tuple)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .veinsgym.proto.Space values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tuple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:veinsgym.proto.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  const Tuple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:veinsgym.proto.Tuple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:veinsgym.proto.Tuple)
    MergeFrom(*source);
  }
}

void Tuple::MergeFrom(const Tuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:veinsgym.proto.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Tuple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:veinsgym.proto.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple::CopyFrom(const Tuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:veinsgym.proto.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple::IsInitialized() const {
  return true;
}

void Tuple::Swap(Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple::InternalSwap(Tuple* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tuple::GetMetadata() const {
  protobuf_veinsgym_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_veinsgym_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace veinsgym
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Request* Arena::CreateMaybeMessage< ::veinsgym::proto::Request >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Reply* Arena::CreateMaybeMessage< ::veinsgym::proto::Reply >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Reply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Init* Arena::CreateMaybeMessage< ::veinsgym::proto::Init >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Init >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Shutdown* Arena::CreateMaybeMessage< ::veinsgym::proto::Shutdown >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Shutdown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Step* Arena::CreateMaybeMessage< ::veinsgym::proto::Step >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Step >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Space* Arena::CreateMaybeMessage< ::veinsgym::proto::Space >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Space >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Box* Arena::CreateMaybeMessage< ::veinsgym::proto::Box >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Dict_Item* Arena::CreateMaybeMessage< ::veinsgym::proto::Dict_Item >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Dict_Item >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Dict* Arena::CreateMaybeMessage< ::veinsgym::proto::Dict >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Dict >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Discrete* Arena::CreateMaybeMessage< ::veinsgym::proto::Discrete >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Discrete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::MultiBinary* Arena::CreateMaybeMessage< ::veinsgym::proto::MultiBinary >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::MultiBinary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::MultiDiscrete* Arena::CreateMaybeMessage< ::veinsgym::proto::MultiDiscrete >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::MultiDiscrete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::veinsgym::proto::Tuple* Arena::CreateMaybeMessage< ::veinsgym::proto::Tuple >(Arena* arena) {
  return Arena::CreateInternal< ::veinsgym::proto::Tuple >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
